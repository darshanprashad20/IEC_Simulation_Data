**INTRODUCTION
IEC 104, also known as IEC 60870-5-104, is a communication protocol used in telecontrol, teleprotection, and other telecommunication functions within electrical power systems.
It is designed to facilitate the exchange of information between control centers and substation equipment over wide area networks using standard transport profiles.

Frame Structure: The protocol uses a variable-length frame structure, allowing it to handle a variety of data types and sizes.
This flexibility is beneficial for modern industrial applications that require complex data handling.

**Frame Structure

    1. Start Byte (0x68): The frame always begins with the start byte 0x68 to indicate the beginning of a frame.
    2. Length Field: The second byte specifies the length of the APDU (Application Protocol Data Unit), excluding the start byte and the length field itself.
    3. Control Field: This field contains control information used for communication management. It can include sequence numbers for sent and received frames, commands, and acknowledgments.
    4. ASDU (Application Service Data Unit): The ASDU contains the actual data being transmitted. It includes several sub-fields:
        ◦ Type Identifier: Specifies the type of information (e.g., single-point information, double-point information).
        ◦ Variable Structure Qualifier: Indicates the number of information objects and the presence of optional fields.
        ◦ Cause of Transmission: Specifies why the data is being transmitted (e.g., spontaneous, cyclic, request).
        ◦ Common Address of ASDU: Identifies the address of the device sending or receiving the data.
        ◦ Information Object Address: Specifies the address of the data within the device.
        ◦ Information Elements: Contains the actual data values (e.g., status, measurements).
    5. Checksum: Ensures data integrity by verifying that the frame has not been altered during transmission.
    6. End Byte (0x16): The frame ends with the byte 0x16, signaling the end of the frame.


**Example

Let's consider a simple example where the control center requests the status of a single point from a remote device.
Frame Breakdown:
    • Start Byte: 0x68
    • Length Field: 0x0E (14 bytes long, excluding the start byte and length field)
    • Control Field: Contains control information for managing the communication.
    • ASDU:
        ◦ Type Identifier: 0x01 (indicating single-point information)
        ◦ Variable Structure Qualifier: 0x01 (one information object)
        ◦ Cause of Transmission: 0x03 (request)
        ◦ Common Address of ASDU: 0x01 (address of the remote device)
        ◦ Information Object Address: 0x0100 (address of the specific data point)
        ◦ Information Elements: 0x01 (status of the single point: ON)
    • Checksum: Calculated value to verify data integrity
    • End Byte: 0x16

**Full Frame in Hexadecimal**
68 0E 00 00 01 03 01 00 01 00 01 00 00 16

	68: Start Byte
    • 0E: Length Field (14 bytes)
    • 00 00: Control Field (example values)
    • 01: Type Identifier (single-point information)
    • 03: Cause of Transmission (request)
    • 01: Common Address of ASDU (device address)
    • 00 01 00: Information Object Address (data point address)
    • 01: Information Elements (status: ON)
    • 00 00: Checksum (example values)
    • 16: End Byte

**Application Examples

    Integrate existing devices to a modern control system with a field proven product

    Use the IEC-104 event based communication instead of polling

    Feeder automation

    Substation automation

    Utility automation

    Reclosers

    Protection relays

**Standard IEC 60870-5-104 ASDU - Typeids
**Type Dec Description

M_SP_NA_1 1 Single-point information
M_SP_TA_1 2 Single-point information with time tag ( IEC 101 Supported )
M_DP_NA_1 3 Double-point information
M_DP_TA_1 4 Double-point information with time tag ( IEC 101 Supported )
M_ST_NA_1 5 Step position information
M_ST_TA_1 6 Step position information with time tag ( IEC 101 Supported )
M_BO_NA_1 7 Bitstring of 32 bit
M_BO_TA_1 8 Bitstring of 32 bit with time tag ( IEC 101 Supported )
M_ME_NA_1 9 Measured value, normalised value
M_ME_TA_1 10 Measured value, normalized value with time tag ( IEC 101 Supported )
M_ME_NB_1 11 Measured value, scaled value
M_ME_TB_1 12 Measured value, scaled value wit time tag ( IEC 101 Supported )
M_ME_NC_1 13 Measured value, short floating point number
M_ME_TC_1 14 Measured value, short floating point number with time tag ( IEC 101 Supported )
M_IT_NA_1 15 Integrated totals
M_IT_TA_1 16 Integrated totals with time tag ( IEC 101 Supported )
M_EP_TA_1 17 Event of protection equipment with time tag
M_EP_TB_1 18 Packed start events of protection equipment with time tag
M_EP_TC_1 19 Packed output circuit information of protection equipment with time tag
M_PS_NA_1 20 Packed single point information with status change detection
M_ME_ND_1 21 Measured value, normalized value without quality descriptor
ASDU_TYPE_22..29 22..29 Reserved (standard area)
M_SP_TB_1 30 Single-point information with time tag CP56Time2a
M_DP_TB_1 31 Double-point information with time tag CP56Time2a
M_ST_TB_1 32 Step position information with time tag CP56Time2a
M_BO_TB_1 33 Bitstring of 32 bit with time tag CP56Time2a
M_ME_TD_1 34 Measured value, normalised value with time tag CP56Time2a
M_ME_TE_1 35 Measured value, scaled value with time tag CP56Time2a
M_ME_TF_1 36 Measured value, short floating point number with time tag CP56Time2a
M_IT_TB_1 37 Integrated totals with time tag CP56Time2a
M_EP_TD_1 38 Event of protection equipment with time tag CP56Time2a
M_EP_TE_1 39 Packed start events of protection equipment with time tag CP56Time2a
M_EP_TF_1 40 Packed output circuit information of protection equipment with time tag CP56Time2a
ASDU_TYPE_41..44 41..44 Reserved (standard area)
C_SC_NA_1 45 Single command
C_DC_NA_1 46 Double command
C_RC_NA_1 47 Regulating step command
C_SE_NA_1 48 Set-point Command, normalized value
C_SE_NB_1 49 Set-point Command, scaled value
C_SE_NC_1 50 Set-point Command, short floating point number
C_BO_NA_1 51 Bitstring 32 bit command
ASDU_TYPE_52..57 52..57 Reserved (standard area)
C_SC_TA_1 58 Single command with time tag CP56Time2a
C_DC_TA_1 59 Double command with time tag CP56Time2a
C_RC_TA_1 60 Regulating step command with time tag CP56Time2
C_SE_TA_1 61 Measured value, normalised value command with time tag CP56Time2a
C_SE_TB_1 62 Measured value, scaled value command with time tag CP56Time2a
C_SE_TC_1 63 Measured value, short floating point number command with time tag CP56Time2a
C_BO_TA_1 64 Bitstring of 32 bit command with time tag CP56Time2a
ASDU_TYPE_65..69 65..69 Reserved (standard area)
M_EI_NA_1 70 End of Initialization
ASDU_TYPE_71..99 71..99 Reserved (standard area)
C_IC_NA_1 100 Interrogation command
C_CI_NA_1 101 Counter interrogation command
C_RD_NA_1 102 Read command
C_CS_NA_1 103 Clock synchronization command
C_TS_NA_1 104 Test command
C_RP_NA_1 105 Reset process command
C_CD_NA_1 106 Delay acquisition command
C_TS_TA_1 107 Test command with time tag CP56Time2a
ASDU_TYPE_108..109 108..109 Reserved (standard area)
P_ME_NA_1 110 Parameter of measured values, normalized value
P_ME_NB_1 111 Parameter of measured values, scaled value
P_ME_NC_1 112 Parameter of measured values, short floating point number
P_AC_NA_1 113 Parameter activation
ASDU_TYPE_114..119 114..119 Reserved (standard area)
F_FR_NA_1 120 File ready
F_SR_NA_1 121 Section ready
F_SC_NA_1 122 Call directory, select file, call file, call section
F_LS_NA_1 123 Last section, last segment
F_FA_NA_1 124 ACK file, ACK section
F_SG_NA_1 125 Segment
F_DR_TA_1 126 Directory
ASDU_TYPE_127..255 127..255 Reserved (user area)


1. IEC870 COT Cause
Purpose: Indicates the Cause of Transmission (COT), such as periodic updates, spontaneous reports, or interrogations. INTROGEN = 20 represents a general interrogation response.

Common Uses of COT
The values in the dropdown (e.g., INTROGEN = 20, INRO1 = 21, etc.) represent predefined causes of transmission defined in the IEC 60870-5-104 standard. Here's a brief explanation of the most commonly used COT values:

INTROGEN (20): Interrogation General

This is used when the master station (SCADA) performs a general interrogation request. The RTU responds with all current data points (e.g., device statuses, measurements, etc.).
It is the most common COT used when the SCADA master requests data from the RTU.
INRO1 (21) to INRO16 (36): Interrogation Groups

These are used for grouped interrogation. Instead of interrogating all data points (as with INTROGEN), the SCADA master can interrogate specific groups of data points.
Useful in systems where data points are logically grouped, e.g., by device or function.
REQCOGEN (37): Request for General Command

Indicates that a general command is being sent to the RTU, such as a reset or initialization command.
REQCO1 (38) to REQCO4 (41): Request for Specific Commands

Represents specific requests for operations (e.g., switching on/off, parameter adjustments) that are categorized into command groups.
How COT Works in the System

For Event-Based Transmission:
When a parameter changes or an alarm is triggered, the RTU sends the data to the SCADA master with an appropriate COT. For example:
A breaker status changes: COT = Spontaneous (SPONT).
Periodic update: COT = Cyclic Transmission (PERIODIC).

For Interrogation:
When the SCADA master requests data:
The request includes a specific COT (e.g., INTROGEN for general interrogation).
The RTU responds with the requested data, tagging it with the same COT to indicate the response.


2. SBO Timeout
Purpose: Sets the Select Before Operate (SBO) timeout value in seconds. This is relevant for certain control models where an action needs to be confirmed within a timeout period. A value of 0 means SBO is not used.


**Control Command Types in IEC 104:
Single Command (C_SC_NA_1): Used to control single-bit points, such as turning something on or off.
Double Command (C_DC_NA_1): Used for points requiring double-bit states, like forward/reverse or open/close.
Step Position Command (C_SE_NA_1): Used for stepwise control of devices with position adjustments.
Set-Point Command (C_SE_NB_1 or C_SE_NC_1): Used to send analog values to the server, either as normalized, scaled, or floating-point values.

Types for Setting or Changing Data:
C_SC_NA_1: Single command (e.g., turning on or off a device).
C_DC_NA_1: Double command (e.g., for devices with more than one state, like a three-position switch).
C_RC_NA_1: Regulating step command (e.g., adjusting the position of a regulator).
C_SE_NA_1: Set point command (normalized value).
C_SE_NB_1: Set point command (scaled value).
C_SE_NC_1: Set point command (floating point value).
C_BO_NA_1: Bitstring of 32 bits, used to send multiple bits of information in one command.
Explanation:
C_SC_NA_1 (Single Command): Used to issue a single control command like turning something on or off.
C_DC_NA_1 (Double Command): Used when you have more than one state to control, like "On," "Off," and "Intermediate."
C_SE_NA_1, C_SE_NB_1, C_SE_NC_1: Used to set a specific value (like a temperature or voltage setpoint).
C_SE_NA_1: Normalized setpoint.
C_SE_NB_1: Scaled setpoint.
C_SE_NC_1: Floating-point setpoint.
C_BO_NA_1 (Bitstring): Allows sending a 32-bit value, which can represent multiple binary states or control multiple points.
For Writing Floating-Point Values:
C_SE_NC_1 is the appropriate type for writing floating-point values.


C_SC_NA_1	Single command (On/Off)	Turn on a light
C_DC_NA_1	Double command (Three-state device)	Set fan to low
C_RC_NA_1	Regulating step command (Incremental)	Increase voltage by one step
C_SE_NA_1	Set point (Normalized value)	Set temperature to 50% of range
C_SE_NB_1	Set point (Scaled value)	Set motor speed to 600 RPM
C_SE_NC_1	Set point (Floating point)	Set voltage to 121.5 V
C_BO_NA_1	Bitstring (32 bits)	Set control bits



**************ASDU and IOA******************************
In IEC 104 protocol, ASDU (Application Service Data Unit) and IOA (Information Object Address) are crucial elements that help identify and organize data communication between devices. Let's break down their roles and how to configure them correctly.
1. ASDU (Application Service Data Unit)

The ASDU identifies a specific logical device or group of data points. It includes information such as:

    Type identification (data type, e.g., M_ME_NB_1 for scaled analog values)
    Cause of transmission (e.g., spontaneous, periodic, or interrogation)
    ASDU address (identifies a source or destination of the data)

Role

    ASDU Address: Functions like a "device ID" for logical separation.
    Each physical or logical device in your system typically has a unique ASDU address.
    Same Device: All fields (voltage, current, and frequency) would share the same ASDU if they come from the same transformer.
    Different Devices: Different ASDU addresses are used for separate devices (e.g., transformer A might have ASDU 1, transformer B might have ASDU 2).

2. IOA (Information Object Address)

The IOA uniquely identifies a specific data point within the ASDU. It acts as an address for variables or parameters.
Role

    The IOA differentiates between data points for voltage, current, and frequency within the same ASDU.
    For example:
        Voltage → IOA 1001
        Current → IOA 1002
        Frequency → IOA 1003

These are just examples; the actual IOA values are assigned based on your system design.
Configuration Guidelines

If you are simulating the status of a single transformer:

    Assign a single ASDU address (e.g., 1) for the transformer.
    Assign unique IOAs for each parameter:
        Voltage: IOA 1001
        Current: IOA 1002
        Frequency: IOA 1003

If you are simulating multiple transformers:

    Assign unique ASDU addresses (e.g., 1 for Transformer A, 2 for Transformer B).
    Keep the same pattern for IOAs (e.g., 1001 for voltage, 1002 for current, etc.).





